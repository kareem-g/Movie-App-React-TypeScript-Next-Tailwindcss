import Head from "next/head";
import { Header } from "@/components/Header";
import Banner from "@/components/Banner";
import requests from "api";
import { GetServerSideProps } from "next";
import { Movie } from "types";
import { Row } from "@/components/Row";
import { motion } from "framer-motion";
import { useRecoilValue } from "recoil";
import { modalState, movieState } from "atoms/ModalAtoms";
import Modal from "@/components/Modal";
import { Suspense } from "react";

interface Props {
  netflixOriginals: Movie[];
  trendingNow: Movie[];
  topRated: Movie[];
  actionMovies: Movie[];
  comedyMovies: Movie[];
  horrorMovies: Movie[];
  romanceMovies: Movie[];
  documentaries: Movie[];
  // products: Product[]
}

export default function Home({
  netflixOriginals,
  actionMovies,
  comedyMovies,
  documentaries,
  horrorMovies,
  romanceMovies,
  topRated,
  trendingNow,
}: Props) {
  const showModal = useRecoilValue(modalState);
  const movie = useRecoilValue(movieState);

  return (
    <Suspense>
      <motion.div
        initial={{ opacity: 0 }}
        whileInView={{ opacity: 1 }}
        viewport={{ once: true }}
      >
        <Head>
          <title>Home - Netflix</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Header />
        {/* Header */}
        <main className="relative pb-24 pl-4 lg:space-y-24 lg:pl-16">
          {/* Banner */}
          <Banner netflixOriginals={topRated} />

          {/* <h1 className="flex min-h-screen flex-col items-center justify-center py-2">
          Netflix - Home
        </h1> */}

          <section className="md:space-y-16 pt-36 pb-4 mb-4">
            <Row
              isDetails={false}
              title="Trending Now"
              movies={trendingNow}
              type="movie"
            />
            <Row
              isDetails={false}
              title="Top Rated"
              movies={topRated}
              type="movie"
            />
            <Row
              isDetails={false}
              title="Netflix Originals"
              movies={netflixOriginals}
              type="movie"
            />
            <Row
              isDetails={false}
              title="Action Thrillers"
              movies={actionMovies}
              type="movie"
            />
            {/* My List */}
            {/* {list.length > 0 && <Row title="My List" movies={list} />} */}

            <Row
              isDetails={false}
              title="Comedies"
              movies={comedyMovies}
              type="movie"
            />
            <Row
              isDetails={false}
              title="Scary Movies"
              movies={horrorMovies}
              type="movie"
            />
            <Row
              isDetails={false}
              title="Romance Movies"
              movies={romanceMovies}
              type="movie"
            />
            <Row
              isDetails={false}
              title="Documentaries"
              movies={documentaries}
              type="movie"
            />
          </section>
        </main>
        {/* Modal */}
        {showModal && <Modal />}
      </motion.div>
    </Suspense>
  );
}
export const getServerSideProps: GetServerSideProps = async () => {
  const [
    netflixOriginals,
    trendingNow,
    topRated,
    actionMovies,
    comedyMovies,
    horrorMovies,
    romanceMovies,
    documentaries,
  ] = await Promise.all([
    fetch(requests.fetchNetflixOriginals).then((res) => res.json()),
    fetch(requests.fetchTrending).then((res) => res.json()),
    fetch(requests.fetchTopRated).then((res) => res.json()),
    fetch(requests.fetchActionMovies).then((res) => res.json()),
    fetch(requests.fetchComedyMovies).then((res) => res.json()),
    fetch(requests.fetchHorrorMovies).then((res) => res.json()),
    fetch(requests.fetchRomanceMovies).then((res) => res.json()),
    fetch(requests.fetchDocumentaries).then((res) => res.json()),
  ]);

  return {
    props: {
      netflixOriginals: netflixOriginals.results,
      trendingNow: trendingNow.results,
      topRated: topRated.results,
      actionMovies: actionMovies.results,
      comedyMovies: comedyMovies.results,
      horrorMovies: horrorMovies.results,
      romanceMovies: romanceMovies.results,
      documentaries: documentaries.results,
    },
  };
};
